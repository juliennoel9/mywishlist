<form method="POST" action="<?= $router->pathFor('newPassword') ?>">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Nouveau mot de passe</h3>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="username">Nom d'utilisateur</label>
                    <input required type="text" value="<?= $username ?>" name="username" class="form-control" id="username" maxlength="30" disabled>
                </div>
                <div class="form-group">
                    <label for="password">Mot de passe</label>
                    <div class="input-group">
                        <input required type="password" minlength="8" placeholder="Mot de passe (minimum 8 caractères)" name="password" class="form-control" id="password" maxlength="50">
                        <div class="input-group-append">
                            <button class="input-group-text" onclick="toggleVisibility('password')" type="button" style="outline: none" tabindex="-1"><i class="fas fa-eye"></i></button>
                        </div>
                    </div>
                    <meter value="0" min="-0.2" max="4" id="password-strength-meter" style="display: none"></meter>
                    <div class="font-weight-bold" id="password-security" style="display: none">Niveau de sécurité : </div>
                    <div class="invalid-feedback" id="passwordErr">Invalide</div>
                </div>
                <div class="form-group">
                    <label for="confirmPassWord">Confirmez votre mot de passe</label>
                    <div class="input-group">
                        <input required type="password" minlength="8" placeholder="Confirmez votre mot de passe" name="confirmPassWord" class="form-control" id="confirmPassWord" maxlength="50">
                        <div class="input-group-append">
                            <button class="input-group-text" onclick="toggleVisibility('confirmPassWord')" type="button" style="outline: none" tabindex="-1"><i class="fas fa-eye"></i></button>
                        </div>
                    </div>
                </div>
                <div id="confirmPassWordErr" class="alert alert-danger" style="display: none">Les deux mots de passe ne correspondent pas.</div>
            </div>
            <div class="modal-footer">
                <a class="btn btn-secondary" href="<?= $router->pathFor('home') ?>" role="button">Annuler</a>
                <button type="submit" class="btn btn-primary">Changer mon mot de passe</button>
            </div>
        </div>
    </div>
    <input type="hidden" name="id" value="<?= $_GET['id'] ?>">
    <input type="hidden" name="token" value="<?= $_GET['token'] ?>">
    <input type="hidden" name="<?= $csrf['nameKey'] ?>" value="<?= $csrf['name'] ?>">
    <input type="hidden" name="<?= $csrf['valueKey'] ?>" value="<?= $csrf['value'] ?>">
</form>

<script src="/public/js/zxcvbn.js"></script>
<script>
    /* pour lancer le check apres 1 sec d'inactivité dans l'input */
    let timer2, timer3, timer4, timer5, timer6;
    const finishTyping = 1000;
    let password = document.getElementById('password');
    let passwordErr = document.getElementById('passwordErr');
    let confirm = document.getElementById('confirmPassWord');
    let confirmErr = document.getElementById('confirmPassWordErr');
    let meter = document.getElementById('password-strength-meter');
    let security = document.getElementById('password-security');
    const strength = {
        0: {text : 'Très faible', color : 'darkred'},
        1: {text : 'Faible', color : 'orangered'},
        2: {text : 'Moyen', color : 'orange'},
        3: {text : 'Fort', color : 'yellowgreen'},
        4: {text : 'Très fort', color : 'limegreen'}
    };

    password.addEventListener('input', function() {
        clearTimeout(timer5);
        meter.style.display = this.value ? 'inline' : 'none';
        meter.value = zxcvbn(this.value).score;
        security.style.display = this.value ? 'block' : 'none';
        security.innerText = 'Niveau de sécurité : ' + strength[meter.value].text;
        security.style.color = strength[meter.value].color;
        password.className = 'form-control';
        password.setCustomValidity('');
        confirm.className = 'form-control';
        confirm.setCustomValidity('');
        confirmErr.style.display = "none";
        timer5 = setTimeout(checkPassword, finishTyping);
        timer5 = setTimeout(checkConfirm, finishTyping);
    });
    confirm.addEventListener('input', function() {
        clearTimeout(timer6);
        password.className = 'form-control';
        password.setCustomValidity('');
        confirm.className = 'form-control';
        confirm.setCustomValidity('');
        confirmErr.style.display = "none";
        timer6 = setTimeout(checkConfirm, finishTyping);
    });

    function checkPassword() {
        if (password.value.length < 8) {
            password.className = 'form-control is-invalid';
            passwordErr.innerText = 'Veuillez utiliser au moins 8 caractères.';
            password.setCustomValidity(passwordErr.innerText);
        }
    }

    function checkConfirm() {
        if (password.value !== confirm.value && confirm.value) {
            password.className = 'form-control is-invalid';
            password.setCustomValidity('');
            passwordErr.innerText = '';
            confirm.className = 'form-control is-invalid';
            confirm.setCustomValidity('Les deux mots de passe ne correspondent pas.');
            confirmErr.style.display = "block";
        }
    }

    function toggleVisibility($input) {
        $input = document.getElementById($input);
        if ($input.type === 'password') {
            $input.type = 'text';
            $input.nextElementSibling.firstElementChild.firstElementChild.className = 'fas fa-eye-slash';
        } else {
            $input.type = 'password';
            $input.nextElementSibling.firstElementChild.firstElementChild.className = 'fas fa-eye';
        }
    }
</script>